{"version":3,"sources":["paper/utils.js","paper/tools/history.js","paper/tools/select.js","paper/index.js","Portal/index.js","MimicList/index.js","paper/PaperTools/index.js","paper/History/index.js","paper/Bind/index.js","App.js","serviceWorker.js","index.js","paper/Bind/Bind.module.css","paper/PaperTools/PaperTools.module.css","paper/History/History.module.css"],"names":["sorageUrl","bind","getItems","forEach","item","a","data","type","fetch","url","then","response","json","res","value","get","sourceKey","set","destKey","onAction","action","payload","itemName","values","processAction","updateItem","paper","project","name","activeLayer","getItemsByName","match","indexOf","position","x","y","newPosition","Point","tweenTo","point","newPoint","content","excludedValues","Object","keys","filter","key","includes","undefined","addLine","path","Path","strokeColor","strokeWidth","length","start","moveTo","lineTo","add","selected","addCircle","Circle","fillColor","closed","addRect","Rectangle","addText","props","text","PointText","justification","onClick","createNew","clear","save","config","exportJSON","localStorage","setItem","faker","random","words","method","mode","cache","headers","body","JSON","stringify","console","log","load","getItem","importJSON","getMimicsList","mimics","obj","separator","properties","Array","isArray","split","reduce","prev","curr","p","shift","history","onChangeListeners","getHistory","slice","addToolSelect","tools","find","tool","Tool","minDistance","segment","hitOptions","segments","stroke","fill","tolerance","onMouseDown","event","hitResult","hitTest","modifiers","remove","location","insert","index","smooth","addChild","onMouseMove","onMouseDrag","to","delta","onMouseUp","from","subtract","push","pop","callback","Paper","memo","ref","useRef","actionQueue","useEffect","queue","current","setup","prevLayer","gridConfig","color","width","view","viewSize","height","drawLine","locked","Layer","lines","i","b","line","drawGridVerticalLines","drawGridHorizontalLines","activate","addGrid","onFrame","splice","setInterval","map","Color","resize","Portal","portalEl","document","createElement","appendChild","this","removeChild","ReactDOM","createPortal","children","React","Component","MimicList","triggerRef","popupRef","popperRef","useState","isOpen","setIsOpen","mimicList","setMimicList","createPopper","placement","strategy","options","offset","reference","popper","destroy","togglePopup","prevValue","forceUpdate","className","focusTrapOptions","onDeactivate","clickOutsideDeactivates","tabIndex","onSelect","PaperTools","title","useCallback","mimic","styles","toolButton","History","setHistory","Bind","showBind","setShowBind","form","setForm","availableItems","setAvailableItems","onChange","updatedForm","target","htmlFor","actions","binding","defaultBinding","bindItem","addBinding","sort","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","render","getElementById","URL","process","href","origin","addEventListener","contentType","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.9cbd19c0.chunk.js","sourcesContent":["import paper from 'paper';\nimport faker from 'faker';\n\nexport const defaultFillColor = 'rgba(0,0,0,0.87)';\nexport const defaultStrokeColor = 'rgba(0,0,0,0.87)';\n\nconst sorageUrl = 'https://9tvgcnacn7.execute-api.eu-central-1.amazonaws.com/default/mimic';\n\nexport const initCanvas = (canvas) => {\n    paper.setup(canvas);\n};\n\nexport const bind = () => {\n    // debugger;\n    getItems()\n        .forEach(async item => {\n\n            if (item.data.type === 'rest') {\n\n                const res = await fetch(item.data.url)\n                    .then((response) => response.json());\n\n                const value = get(res, item.data.sourceKey);\n                set(item, item.data.destKey, value);\n            }\n        });\n};\n\nexport const onAction = (action) => {\n    // console.log(\"on Action:\", action);\n\n    const { item, itemName, values } = action.payload;\n\n    const processAction = (item) => {\n        if (action.type === \"update\") {\n            updateItem(item, values);\n        }\n    };\n\n    if (itemName) {\n        paper.project.getItems({\n            name: itemName\n        }).forEach(item => {\n            processAction(item);\n        });\n    }\n\n    if (item) {\n        processAction(item);\n    }\n};\n\nexport const useTool = (name) => {\n    const tool = paper.tools.find(tool => tool.name === name)\n    tool.activate()\n}\n\nexport const getItems = () => {\n    return paper.project?.activeLayer.getItems() ?? [];\n};\n\nexport const getItemsByName = (name) => {\n    return paper.project.getItems({\n        match: (item) => (item.name || \"\").indexOf(name) === 0\n    });\n};\n\nexport const updateItem = function (item, values) {\n\n    if (values.position && item.position) {\n\n        const x = values.position.x || item.position.x;\n        const y = values.position.y || item.position.y;\n        const newPosition = new paper.Point(x, y);\n\n        item.tweenTo(\n            { 'position': newPosition },\n            300\n        );\n    }\n\n    if (values.point && item.point) {\n\n        const x = values.point.x || item.point.x;\n        const y = values.point.y || item.point.y;\n        const newPoint = new paper.Point(x, y);\n\n        item.point = newPoint;\n    }\n\n    if (values.content && item.content) {\n        item.content = values.content;\n    }\n\n    const excludedValues = [\"position\", \"point\", \"content\"];\n\n    Object.keys(values)\n        .filter(key => !excludedValues.includes(key))\n        .forEach(key => {\n\n            if (item[key] !== undefined) {\n                item.tweenTo(\n                    { [key]: values[key] },\n                    300\n                );\n            }\n        });\n\n    return item;\n};\n\nexport const addBinding = ({ itemName, item, binding }) => {\n\n    const defaultBinding = {\n        type: 'rest',\n        url: 'https://jsonplaceholder.typicode.com/todos/1',\n        sourceKey: 'title',\n        destKey: 'content'\n    };\n\n    const bindItem = (item) => {\n        item.data = {\n            ...item.data,\n            ...defaultBinding,\n            ...binding\n        };\n    };\n\n    if (itemName) {\n        paper.project.getItems({\n            name: itemName\n        })\n            .forEach(item => {\n                bindItem(item);\n            })\n    }\n\n    if (item) {\n        bindItem(item);\n    }\n};\n\nexport const addLine = () => {\n\n    const name = \"line\";\n    const path = new paper.Path();\n    path.strokeColor = defaultStrokeColor;\n    path.strokeWidth = 2;\n    path.name = name + getItemsByName(name).length;\n\n    const start = new paper.Point(100, 100);\n    path.moveTo(start);\n    path.lineTo(start.add([200, -50]));\n\n    paper.project.activeLayer.selected = false;\n    path.selected = true;\n};\n\nexport const addCircle = () => {\n\n    const name = \"circle\";\n    const path = new paper.Path.Circle(new paper.Point(100, 100), 50);\n\n    path.fillColor = defaultFillColor;\n    path.strokeColor = defaultStrokeColor;\n    path.strokeWidth = 2;\n    path.closed = true;\n    path.name = name + getItemsByName(name).length;\n\n    paper.project.activeLayer.selected = false;\n    path.selected = true;\n};\n\nexport const addRect = () => {\n\n    const name = \"rect\";\n    const path = new paper.Path.Rectangle(0, 0, 100, 100);\n\n    path.fillColor = defaultFillColor;\n    path.strokeColor = defaultStrokeColor;\n    path.strokeWidth = 2;\n    path.closed = true;\n    path.name = name + getItemsByName(name).length;\n\n    paper.project.activeLayer.selected = false;\n    path.selected = true;\n};\n\nexport const addText = (props) => {\n\n    const name = \"text\";\n    const point = props.point || new paper.Point(100, 100);\n    const content = props.content || \"Text\";\n\n    const text = new paper.PointText(point);\n    text.justification = 'center';\n    text.fillColor = 'black';\n    text.strokeWidth = 2;\n    text.content = content;\n    text.name = name + getItemsByName(name).length;\n\n    text.onClick = props.onClick;\n\n    return text;\n};\n\nexport const addGrid = () => {\n\n    var prevLayer = paper.project.activeLayer;\n\n    const gridConfig = {\n        color: 'rgba(0,0,0,0.11)',\n        width: paper.view.viewSize.width,\n        height: paper.view.viewSize.height\n    };\n\n    const drawLine = (segments) => {\n\n        const path = new paper.Path(segments);\n        path.strokeColor = 'rgba(0,0,0,0.21)';\n        path.strokeWidth = 1;\n        path.locked = true;\n\n        return path;\n    };\n\n    const drawGridVerticalLines = ({\n        color,\n        width,\n        height\n    }) => {\n\n        let lines = [];\n\n        for (var i = 0; i < width; i++) {\n\n            if (i % 10 === 0) {\n                var a = new paper.Point(i, 0);\n                var b = new paper.Point(i, height);\n                var segments = [a, b];\n                var line = drawLine(segments);\n\n                line.strokeColor = color;\n                line.strokeWidth = i % 50 === 0 ? 2 : 1;\n\n                lines.push(line);\n            }\n        }\n\n        return lines;\n    }\n\n    const drawGridHorizontalLines = ({\n        color,\n        width,\n        height\n    }) => {\n\n        let lines = [];\n\n        for (var i = 0; i < height; i++) {\n\n            if (i % 10 === 0) {\n\n                var a = new paper.Point(0, i);\n                var b = new paper.Point(width, i);\n                var segments = [a, b];\n                var line = drawLine(segments);\n\n                line.strokeColor = color;\n                line.strokeWidth = i % 50 === 0 ? 2 : 1;\n\n                lines.push(line);\n            }\n        }\n\n        return lines;\n    }\n\n    var gridLayer = new paper.Layer();\n    gridLayer.name = \"grid-layer\";\n\n    drawGridVerticalLines(gridConfig);\n    drawGridHorizontalLines(gridConfig);\n\n    prevLayer.activate();\n};\n\nexport const createNew = async () => {\n    paper.project.clear();\n    // const json = localStorage.getItem('project');\n    // if (json) {\n    //     // paper.project.clear();\n    //     paper.project.activeLayer.removeChildren();\n    // }\n};\n\nexport const save = async () => {\n    \n    const config = paper.project.activeLayer.exportJSON();\n    localStorage.setItem('project', config);\n\n    const name = faker.random.words();\n\n    const data = {\n        name,\n        config\n    };\n\n    try {\n        await fetch(sorageUrl, {\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': 'wL5upgCpe33dj3Ozu1Ron2x9PFnzlE4S7DXh8DH6',\n            },\n            body: JSON.stringify(data)\n        });\n    }\n    catch(error) {\n        console.log(\"Save mimic error\", error);\n    }\n};\n\nexport const load = async () => {\n    \n    const json = localStorage.getItem('project');\n    if (json) {\n        // paper.project.clear();\n        paper.project.activeLayer.importJSON(json);\n    }\n};\n\nexport const getMimicsList = async () => {\n\n    try {\n\n        const response = await fetch(sorageUrl, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': 'wL5upgCpe33dj3Ozu1Ron2x9PFnzlE4S7DXh8DH6',\n            }\n        });\n\n        const mimics = await response.json();\n        console.log(\"Mimics loaded\", mimics);\n\n        return mimics;\n    }\n    catch(error) {\n        console.log(\"Mimics load error\", error);\n    }\n};\n\nexport const get = (obj = this, path, separator = '.') => {\n    var properties = Array.isArray(path) ? path : path.split(separator)\n    return properties.reduce((prev, curr) => prev && prev[curr], obj)\n};\n\nfunction set(obj, path, value) {\n\n    if (!path) {\n        return;\n    }\n\n    if (typeof path === \"string\") {\n        path = path.split('.');\n    }\n\n    if (path.length > 1) {\n        var p = path.shift();\n        if (obj[p] == null || typeof obj[p] !== 'object') {\n            obj[p] = {};\n        }\n        set(obj[p], path, value);\n    } else {\n        obj[path[0]] = value;\n    }\n};","\nimport { onAction } from \"../utils\";\n\nconst history = [];\nconst MAX_HISTORY_LENGTH = 1000;\nconst onChangeListeners = [];\n\nexport const addToHistory = (item) => {\n    history.push(item);\n    if(history.length > MAX_HISTORY_LENGTH) {\n        history.pop();\n    }\n\n    onChangeListeners.forEach(callback => callback(getHistory()));\n}\n\nexport const getHistory = () => {\n    return history.slice();\n}\n\nexport const removeFromHistory = (item) => {\n\n    const index = history.indexOf(item);\n\n    if (index > -1) {\n        history.splice(index, 1);\n        onChangeListeners.forEach(callback => callback(history));\n    }\n}\n\nexport const revertHistory = () => {\n\n    if(history?.length === 0) {\n        return;\n    }\n\n    const record = history.pop();\n    onChangeListeners.forEach(callback => callback(getHistory()));\n    \n    if (record?.key === \"segment.point\") {\n\n        const { segment, from } = record.payload;\n\n        if (segment) {\n            onAction({\n                type: \"update\",\n                payload: {\n                    item: segment,\n                    values: {\n                        point: from\n                    }\n                }\n            });\n        }\n    }\n}\n\nexport const onHistoryChange = (callback) => {\n    onChangeListeners.push(callback);\n}","import paper from 'paper';\nimport { addToHistory } from './history';\n\nexport const addToolSelect = () => {\n\n    const name = \"toolSelect\";\n\n    if (paper.tools.find(tool => tool.name === name)) {\n        return;\n    }\n\n    var tool = new paper.Tool();\n    tool.name = name;\n    tool.minDistance = 5;\n\n    var hitOptions = {\n        segments: true,\n        stroke: true,\n        fill: true,\n        tolerance: 5\n    };\n\n    var segment, path;\n    var movePath = false;\n\n    tool.onMouseDown = function (event) {\n\n        segment = path = null;\n        var hitResult = paper.project.hitTest(event.point, hitOptions);\n\n        if (!hitResult)\n            return;\n\n        if (event.modifiers.shift) {\n            if (hitResult.type === 'segment') {\n                hitResult.segment.remove();\n            };\n            return;\n        }\n\n        path = hitResult.item;\n\n        if (hitResult.type === 'segment') {\n            segment = hitResult.segment;\n        }\n        else if (hitResult.type === 'stroke') {\n            var location = hitResult.location;\n            segment = path.insert(location.index + 1, event.point);\n            path.smooth();\n        }\n\n        movePath = hitResult.type === 'fill';\n\n        if (movePath) {\n            paper.project.activeLayer.addChild(hitResult.item);\n        }\n    };\n\n    tool.onMouseMove = (event) => {\n\n        if (event.item) {\n\n            if (event.item.name === 'button') {\n                return;\n            }\n\n            paper.project.activeLayer.selected = false;\n            event.item.selected = true;\n        }\n    };\n\n    tool.onMouseDrag = (event) => {\n\n        if (segment) {\n            const to = segment.point.add(event.delta);\n            segment.point = to;\n            // path.smooth();\n        }\n        else if (path) {\n\n            if (path.selected) {\n                path.position = path.position.add(event.delta);\n            }\n        }\n    };\n\n    tool.onMouseUp = event => {\n\n        if (segment) {\n\n            const from = event.point.subtract(event.delta);\n            const to = event.point;\n    \n            addToHistory({\n                key: 'segment.point',\n                payload: {\n                    segment,\n                    from,\n                    to\n                }\n            });\n        }\n    };\n}\n","import React, { useEffect, memo, useRef } from 'react';\nimport paper from 'paper';\nimport { addGrid, load, bind, onAction } from './utils';\nimport { addToolSelect } from './tools/select';\n\nconst Paper = memo(() => {\n\n    const ref = useRef();\n    const actionQueue = useRef([]);\n\n    useEffect(() => {\n\n        const queue = actionQueue.current;\n\n        paper.setup(ref.current);\n\n        addToolSelect();\n        addGrid();\n\n        load();\n        bind();\n\n        paper.view.onFrame = (event) => {\n            if (queue.length > 0) {\n\n                const action = queue[queue.length - 1];\n                onAction(action);\n    \n                const index = queue.indexOf(action);\n                if (index > -1) {\n                    queue.splice(index, 1);\n                }\n            }\n        }\n\n        setInterval(() => {\n            bind();\n        }, 5000);\n\n        // TODO REMOVE\n        setInterval(() => {\n\n            new Array(10)\n                .fill(null)\n                .map((action, index) => ({\n                    type: \"update\",\n                    payload: {\n                        itemName: \"rect\" + index,\n                        values: {\n                            fillColor: paper.Color.random()\n                        }\n                    }\n                }))\n                .forEach(action => {\n                    queue.push(action);\n                });\n    \n        }, 1000);\n    \n        // return () => {\n        //     clearInterval();\n        //     clearInterval();\n        // }\n    }, []);\n\n    return (\n        <canvas ref={ref} resize=\"resize\"></canvas>\n    );\n});\n\nexport default Paper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Portal extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.portalEl = document.createElement('div');\n    }\n\n    componentDidMount () {\n        document.body.appendChild(this.portalEl);\n    }\n\n    componentWillUnmount () {\n        document.body.removeChild(this.portalEl);\n    }\n\n    render () {\n        return ReactDOM.createPortal(this.props.children, this.portalEl);\n    }\n}\n\nexport default Portal;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { createPopper } from \"@popperjs/core\";\nimport './Popup.css';\nimport Portal from \"../Portal\";\nimport FocusTrap from \"focus-trap-react\";\nimport { getMimicsList } from '../paper/utils';\n\nconst MimicList = (props) => {\n\n    const triggerRef = useRef();\n    const popupRef = useRef();\n    const popperRef = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    const [mimicList, setMimicList] = useState([]);\n\n    useEffect(() => {\n        getMimicsList().then(setMimicList);\n    }, []);\n\n    useEffect(() => {\n\n        popperRef.current = createPopper(\n            triggerRef.current,\n            popupRef.current,\n            {\n                placement: 'left-start',\n                strategy: 'fixed',\n                modifiers: [\n                    {\n                        name: 'offset',\n                        options: {\n                            // offset: [0, 0],\n                            offset: ({ placement, reference, popper }) => {\n                                return [0, -reference.width];\n                            },\n                        },\n                    }\n                ],\n            }\n        );\n\n        return () => {\n            popperRef.current.destroy();\n        }\n\n    }, []);\n\n    const togglePopup = () => {\n        setIsOpen(prevValue => !prevValue, popperRef.current.forceUpdate());\n    };\n\n    return (\n        <>\n            <button\n                ref={triggerRef}\n                onClick={togglePopup}\n            >\n                Load Mimic\n                </button>\n\n            <Portal>\n                <div className=\"popup__container\" ref={popupRef}>\n                    {isOpen &&\n                        <FocusTrap focusTrapOptions={{\n                            onDeactivate: togglePopup,\n                            clickOutsideDeactivates: true,\n                        }}>\n                            <div className=\"popup\">\n                                {(mimicList || []).map((item, key) => \n                                    <div key={key} tabIndex={0} onClick={() => props.onSelect(item)}>{item.name}</div>    \n                                )}\n                            </div>\n                        </FocusTrap>\n                    }\n                </div>\n            </Portal>\n        </>\n    );\n};\n\nexport default MimicList;","import React, { memo, useCallback } from 'react';\nimport paper from 'paper';\nimport { addLine, addCircle, addRect, addText, save, load, createNew } from '../utils';\n// import { revertHistory } from '../tools/history';\n\nimport styles from './PaperTools.module.css';\nimport MimicList from '../../MimicList';\n\nconst PaperTools = memo(() => {\n\n    const tools = [\n        { title: \"New\", onClick: createNew },\n        { title: \"Load\", onClick: load },\n        { title: \"Save\", onClick: save },\n        { title: \"Add Line\", onClick: addLine },\n        { title: \"Add Circle\", onClick: addCircle },\n        { title: \"Add Rect\", onClick: addRect },\n        { title: \"Add Text\", onClick: addText },\n        // { title: \"Undo\", onClick: revertHistory },\n        // { title: \"Refresh Bindings\", onClick: bind}\n    ];\n\n    const onSelect = useCallback(mimic => {\n        paper.project.activeLayer.importJSON(mimic.config);\n    }, []);\n\n    return (\n        <div className={styles.tools}>\n            {tools.map((tool, index) =>\n                <button\n                    key={index}\n                    className={styles.toolButton}\n                    onClick={tool.onClick}>\n                    {tool.title}\n                </button>\n            )}\n            <MimicList onSelect={onSelect} />\n        </div>\n    );\n});\n\nexport default PaperTools;\n","import React, { memo, useState } from \"react\";\nimport { getHistory, onHistoryChange } from \"../tools/history\";\n\nimport styles from './History.module.css';\n\nconst History = memo(() => {\n\n    const [history = [], setHistory] = useState(getHistory());\n    onHistoryChange(history => {\n        setHistory(history);\n    });\n\n    return (\n        <ul className={styles.history}>\n            {history.map((item, index) =>\n                <li key={index}>\n                    {/* {`${item.key}: x/y=${item.payload?.from.x}=>${item.payload?.to.x} y=${item.payload?.from.y}=>${item.payload?.to.y}`} */}\n                    {`${item.key}: x/y = ${item.payload?.from.x}/${item.payload?.from.y} -> ${item.payload?.to.x}/${item.payload?.to.y}`}\n                </li>\n            )}\n        </ul>\n    );\n});\n\nexport default History;\n","import React, { memo, useState } from \"react\";\n\nimport styles from './Bind.module.css';\nimport { addBinding, getItems } from \"../utils\";\n\nconst Bind = memo(() => {\n\n    const [showBind, setShowBind] = useState(false);\n    const [form, setForm] = useState({});\n    const [availableItems, setAvailableItems] = useState([]);\n\n    const onShowBind = () => {\n        setAvailableItems(getItems().sort((a, b) => (a.name > b.name) ? 1 : -1));\n        setShowBind(true);\n    };\n\n    const onCloseBind = () => {\n        setShowBind(false);\n    };\n\n    const onChange = (event) => {\n\n        const updatedForm = {\n            ...form,\n            [event.target.name]: event.target.value\n        }\n\n        setForm(updatedForm);\n    };\n\n    const onBind = () => {\n\n        addBinding({\n            item: availableItems.filter(item => item.name === form.item)[0],\n            itemName: form.itemName,\n            binding: {\n                type: 'rest',\n                ...form\n            }\n        });\n\n        setShowBind(false);\n    }\n\n    if (!showBind) {\n        return (\n            <div className={styles.bind}>\n                <button type=\"button\" onClick={onShowBind}>Bind</button>\n            </div>\n        );\n    }\n\n    return (\n        <div className={styles.bind}>\n            <label htmlFor=\"item\">Item Name</label>\n            <select name=\"item\" onChange={onChange}>\n                {availableItems.map((item, key) =>\n                    <option key={key} value={item.name}>{item.name}</option>\n                )}\n            </select>\n            <label htmlFor=\"url\">Url with JSON response</label>\n            <input type=\"text\" name=\"url\" onChange={onChange}></input>\n            <label htmlFor=\"sourceKey\">Source Key</label>\n            <input type=\"text\" name=\"sourceKey\" onChange={onChange}></input>\n            <label htmlFor=\"destKey\">Destination Key</label>\n            <input type=\"text\" name=\"destKey\" onChange={onChange}></input>\n            <div className={styles.actions}>\n                <button type=\"button\" onClick={onBind}>Bind</button>\n                <button type=\"button\" onClick={onCloseBind}>Cancel</button>\n            </div>\n        </div>\n    );\n});\n\nexport default Bind;\n","import React from 'react';\nimport Paper from './paper';\nimport PaperTools from './paper/PaperTools';\nimport History from './paper/History';\nimport Bind from './paper/Bind';\n\n// import './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Paper />\n      <PaperTools />\n      <History />\n      <Bind />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n\n// serviceWorker.register({\n//     onUpdate: () => alert(\"New content is available and will be used when all tabs for this page are closed.\"),\n//     onSuccess: () => () => {\n//         alert(\"Content is cached for offline use.\");\n\n//     }\n// });\n\n// setInterval(() => {\n\n//     navigator.serviceWorker.getRegistration()\n//         .then(registration => {\n//             registration.update();\n\n//         });\n\n// }, 3000);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bind\":\"Bind_bind__3PT2w\",\"actions\":\"Bind_actions__3CvtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tools\":\"PaperTools_tools__1gGrH\",\"toolButton\":\"PaperTools_toolButton__3H_SE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__3cTjF\"};"],"sourceRoot":""}