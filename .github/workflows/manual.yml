# on:
#   push:
#     tags:
#       - "v*" # matches v1.0.1, v1.2, v2, etc
on: 
  workflow_dispatch:
#     inputs:
#       version:
#         description: 'Version'     
#         required: true
#         default: 'v'
jobs:
  commit-date:
    runs-on: ubuntu-latest
    outputs:
      commit_date: ${{ steps.author-date.outputs.result }}
    steps:
      - uses: actions/github-script@0.3.0
        id: author-date
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date.slice(0, 10);
            
  create-release:
    name: Create GitHub release
    needs: commit-date
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.commit-date.outputs.commit_date }}
          release_name: 'release-${{ needs.commit-date.outputs.commit_date }}'
          draft: true
          prerelease: false

#   build:
#     name: Create release build for ${{ matrix.os }}
#     needs: create-release
#     strategy:
#       matrix:
#         os: [a, b, c]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
        
#       - name: Create Release Build
#         uses: actions/setup-node@v1
#         with:
#           node-version: 10.x
#       - run: npm ci
#       - run: npm run build --if-present
# #       - run: npm test
#         env:
#           CI: true
        
#       - name: Archive Release 
#         uses: thedoctor0/zip-release@master  
#         with:
#           filename: 'mimic-release-${{ matrix.os }}.zip'
#           directory: './build'

#       - name: Upload Release Asset
#         id: upload-release-asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ needs.create-release.outputs.upload_url }}
#           asset_path: ${{ github.workspace }}/build/mimic-release-${{ matrix.os }}.zip
#           asset_name: mimic-release-${{ matrix.os }}.zip
#           asset_content_type: application/zip
